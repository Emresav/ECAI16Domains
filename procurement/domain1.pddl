(define (domain procurement_truck)
(:requirements :typing :durative-actions :fluents :duration-inequalities)

(:types    itemB itemD itemE itemA itemC itemI itemJ itemK - item
			location
)

    (:predicates (available)
                (finished)
				(can_produce_A ?loc1 - location)
				(can_produce_C ?loc1 - location)
				(can_produce_B ?loc1 - location)
				(can_supply ?loc1 - location)
				(delivered ?a - item ?loc1 - location)
                (link ?loc1 ?loc2 - location)
				(at ?loc1 - location)
          )

      (:functions   (stock ?e - item)
            )

(:durative-action produce_item_A
:parameters (?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:control (?batchsize - number)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (>= ?batchsize 1))
                (at start (<= ?batchsize 40))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) (* ?batchsize 2) ) )
                (at start (>= (stock ?c) ?batchsize) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )

            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) ?batchsize))
                (at start (decrease (stock ?c) ?batchsize))
                (at start (decrease (stock ?b) (* ?batchsize 2) ) )
                (at end (available))
)
)

(:durative-action produce_item_B
:parameters(?i - itemI ?j - itemJ ?k - itemK ?b - itemB ?loc1 - location)
:control (?batchsize - number)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (>= ?batchsize 1))
                (at start (<= ?batchsize 40))
                (at start (can_produce_B ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?j) ?batchsize ) )
                (at start (>= (stock ?i) (* ?batchsize 4) ) )
                (at start (>= (stock ?k) (* ?batchsize 2) ) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?b) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) ?batchsize) )
                (at start (decrease (stock ?j) ?batchsize ) )
                (at start (decrease (stock ?i) (* ?batchsize 4) ) )
                (at start (decrease (stock ?k) (* ?batchsize 2) ) )
                (at end (available))
)
)

(:durative-action produce_item_C
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:control (?batchsize - number)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (>= ?batchsize 1))
                (at start (<= ?batchsize 40))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) ?batchsize) )
                (at start (>= (stock ?d) (* ?batchsize 3) ) )
                (at end (>= (stock ?e) 0) ) 
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) ?batchsize) )
                (at start (decrease (stock ?d) (* ?batchsize 3) ) )
                (at start (decrease (stock ?e) ?batchsize) )
                (at end (available))
)
)


(:durative-action Supply_Raw_Material
:parameters(?i - itemI ?d - itemD ?e - itemE ?j - itemJ ?k - itemK ?loc1 - location)
:control (?batchsize_E ?batchsize_D ?batchsize_I ?batchsize_J ?batchsize_K - number)
:duration (= ?duration 1)
:condition (and (at start (>= ?batchsize_D 0))
                (at start (<= ?batchsize_D 40))
                (at start (>= ?batchsize_I 0))
                (at start (<= ?batchsize_I 40))
                (at start (>= ?batchsize_E 0))
                (at start (<= ?batchsize_E 40))
                (at start (>= ?batchsize_J 0))
                (at start (<= ?batchsize_J 40))
                (at start (>= ?batchsize_K 0))
                (at start (<= ?batchsize_K 40))
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )

            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?i) ?batchsize_I))
                (at start (increase (stock ?e) ?batchsize_E))
                (at start (increase (stock ?d) ?batchsize_D))
                (at start (increase (stock ?j) ?batchsize_J))
                (at start (increase (stock ?k) ?batchsize_K))
                (at end (available))
)
)


(:durative-action Go_to
:parameters (?loc1 ?loc2 - location)
:duration (= ?duration 5)
:condition (and (at start (at ?loc1) )
                (at start (link ?loc1 ?loc2))
                (at start (available)))
:effect (and       
			(at start (not (available)))
			(at start (not (at ?loc1)))
            (at end (at ?loc2))
		   (at end (available))
        ))

(:durative-action Deliver_To_Customer
:parameters (?a - item ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (>= (stock ?a) 1) )
                (at start (available))
                (at start (at ?loc1) ) 
                (at end (>= (stock ?a) 0) ) )
:effect (and (at end (delivered ?a ?loc1))
                (at start (not (available)))
                (at start (decrease (stock ?a) 1))
                (at end (available)))
)
)
