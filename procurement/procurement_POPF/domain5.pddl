(define (domain procurement_truck)
(:requirements :typing :durative-actions :fluents :duration-inequalities)

(:types    itemB itemD itemE itemA itemC itemI itemJ itemK itemL itemN - item
            location
)

    (:predicates (available)
                (finished)
                (can_produce_A ?loc1 - location)
                (can_produce_C ?loc1 - location)
                (can_produce_B ?loc1 - location)
                (can_produce_D ?loc1 - location)
                (link ?loc1 ?loc2 - location)
                (can_supply ?loc1 - location)
                (delivered ?a - item ?loc1 - location)
                (at ?loc1 - location)
          )

      (:functions   (stock ?e - item)
            )

(:durative-action produce_item_A_1time
:parameters (?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 2 ) )
                (at start (>= (stock ?c) 1) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 1))
                (at start (decrease (stock ?c) 1))
                (at start (decrease (stock ?b) 2 ) )
                (at end (available))
)
)

(:durative-action produce_item_A_5time
:parameters (?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 10 ) )
                (at start (>= (stock ?c) 5 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 5))
                (at start (decrease (stock ?c) 5))
                (at start (decrease (stock ?b) 10 ) )
                (at end (available))
)
)

(:durative-action produce_item_A_10time
:parameters (?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 20 ) )
                (at start (>= (stock ?c) 10 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 10 ))
                (at start (decrease (stock ?c) 10 ))
                (at start (decrease (stock ?b) 20 ) )
                (at end (available))
)
)

(:durative-action produce_item_A_20time
:parameters (?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 40 ) )
                (at start (>= (stock ?c) 20 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 20 ))
                (at start (decrease (stock ?c) 20 ))
                (at start (decrease (stock ?b) 40 ) )
                (at end (available))
)
)


(:durative-action produce_item_B_1time
:parameters(?i - itemI ?j - itemJ ?k - itemK ?b - itemB ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_B ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?j) 1 ) )
                (at start (>= (stock ?i) 4 ) )
                (at start (>= (stock ?k) 2 ) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?b) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 1 ) )
                (at start (decrease (stock ?j) 1 ) )
                (at start (decrease (stock ?i) 4 ) )
                (at start (decrease (stock ?k) 2 ) )
                (at end (available))
)
)

(:durative-action produce_item_B_5time
:parameters(?i - itemI ?j - itemJ ?k - itemK ?b - itemB ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_B ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?j) 5 ) )
                (at start (>= (stock ?i) 20 ) )
                (at start (>= (stock ?k) 10 ) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?b) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 5 ) )
                (at start (decrease (stock ?j) 5 ) )
                (at start (decrease (stock ?i) 20 ) )
                (at start (decrease (stock ?k) 10 ) )
                (at end (available))
)
)

(:durative-action produce_item_B_10time
:parameters(?i - itemI ?j - itemJ ?k - itemK ?b - itemB ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_B ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?j) 10 ) )
                (at start (>= (stock ?i) 40 ) )
                (at start (>= (stock ?k) 20 ) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?b) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 10 ) )
                (at start (decrease (stock ?j) 10 ) )
                (at start (decrease (stock ?i) 40 ) )
                (at start (decrease (stock ?k) 20 ) )
                (at end (available))
)
)

(:durative-action produce_item_B_20time
:parameters(?i - itemI ?j - itemJ ?k - itemK ?b - itemB ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_B ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?j) 20 ) )
                (at start (>= (stock ?i) 80 ) )
                (at start (>= (stock ?k) 40 ) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?b) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 20 ) )
                (at start (decrease (stock ?j) 20 ) )
                (at start (decrease (stock ?i) 80 ) )
                (at start (decrease (stock ?k) 40 ) )
                (at end (available))
)
)

(:durative-action produce_item_C_1time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 1) )
                (at start (>= (stock ?d) 3 ) )
                (at end (>= (stock ?e) 0) ) 
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 1) )
                (at start (decrease (stock ?d) 3 ) )
                (at start (decrease (stock ?e) 1) )
                (at end (available))
)
)

(:durative-action produce_item_C_5time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 5) )
                (at start (>= (stock ?d) 15 ) )
                (at end (>= (stock ?e) 0) ) 
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 5) )
                (at start (decrease (stock ?d) 15 ) )
                (at start (decrease (stock ?e) 5 ) )
                (at end (available))
)
)

(:durative-action produce_item_C_10time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 10 ) )
                (at start (>= (stock ?d) 30 ) )
                (at end (>= (stock ?e) 0) ) 
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 10 ) )
                (at start (decrease (stock ?d) 30 ) )
                (at start (decrease (stock ?e) 10 ) )
                (at end (available))
    )
)

(:durative-action produce_item_C_20time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 20 ) )
                (at start (>= (stock ?d) 60 ) )
                (at end (>= (stock ?e) 0) ) 
                (at end (>= (stock ?d) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 20 ) )
                (at start (decrease (stock ?d) 60 ) )
                (at start (decrease (stock ?e) 20 ) )
                (at end (available))
    )
)


(:durative-action produce_item_D_1time
:parameters(?l - itemL ?n - itemN ?d - itemD ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_D ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?l) 2 ) )
                (at start (>= (stock ?n) 2 ) )
                (at end (>= (stock ?l) 0) ) 
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?d) 1 ) )
                (at start (decrease (stock ?l) 2 ) )
                (at start (decrease (stock ?n) 2 ) )
                (at end (available))
)
)

(:durative-action produce_item_D_5time
:parameters(?l - itemL ?n - itemN ?d - itemD ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_D ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?l) 10 ) )
                (at start (>= (stock ?n) 10 ) )
                (at end (>= (stock ?l) 0) ) 
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?d) 5 ) )
                (at start (decrease (stock ?l) 10 ) )
                (at start (decrease (stock ?n) 10 ) )
                (at end (available))
)
)

(:durative-action produce_item_D_10time
:parameters(?l - itemL ?n - itemN ?d - itemD ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_D ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?l) 20 ) )
                (at start (>= (stock ?n) 20 ) )
                (at end (>= (stock ?l) 0) ) 
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?d) 10 ) )
                (at start (decrease (stock ?l) 20 ) )
                (at start (decrease (stock ?n) 20 ) )
                (at end (available))
)
)

(:durative-action produce_item_D_20time
:parameters(?l - itemL ?n - itemN ?d - itemD ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_D ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?l) 40 ) )
                (at start (>= (stock ?n) 40 ) )
                (at end (>= (stock ?l) 0) ) 
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?d) 20 ) )
                (at start (decrease (stock ?l) 40 ) )
                (at start (decrease (stock ?n) 40 ) )
                (at end (available))
)
)


(:durative-action Supply_Raw_Material_1each
:parameters(?i - itemI ?e - itemE ?j - itemJ ?k - itemK ?n - itemN  ?l - itemL ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?l) 0) )          
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?i) 1 ))
                (at start (increase (stock ?e) 1 ))
                (at start (increase (stock ?j) 1 ))
                (at start (increase (stock ?k) 1 ))
                (at start (increase (stock ?n) 1 ))
                (at start (increase (stock ?l) 1 ))                             
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_5each
:parameters(?i - itemI ?e - itemE ?j - itemJ ?k - itemK ?n - itemN  ?l - itemL ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?l) 0) )          
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?i) 5 ))
                (at start (increase (stock ?e) 5 ))
                (at start (increase (stock ?j) 5 ))
                (at start (increase (stock ?k) 5 ))
                (at start (increase (stock ?n) 5 ))
                (at start (increase (stock ?l) 5 ))                             
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_10each
:parameters(?i - itemI ?e - itemE ?j - itemJ ?k - itemK ?n - itemN  ?l - itemL ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?l) 0) )          
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?i) 10 ))
                (at start (increase (stock ?e) 10 ))
                (at start (increase (stock ?j) 10 ))
                (at start (increase (stock ?k) 10 ))
                (at start (increase (stock ?n) 10 ))
                (at start (increase (stock ?l) 10 ))                             
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_20each
:parameters(?i - itemI ?e - itemE ?j - itemJ ?k - itemK ?n - itemN  ?l - itemL ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?i) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?j) 0) )
                (at end (>= (stock ?k) 0) )
                (at end (>= (stock ?n) 0) )
                (at end (>= (stock ?l) 0) )          
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?i) 20 ))
                (at start (increase (stock ?e) 20 ))
                (at start (increase (stock ?j) 20 ))
                (at start (increase (stock ?k) 20 ))
                (at start (increase (stock ?n) 20 ))
                (at start (increase (stock ?l) 20 ))                             
                (at end (available))
)
)

(:durative-action Go_to
:parameters (?loc1 ?loc2 - location)
:duration (= ?duration 5)
:condition (and (at start (at ?loc1) )
                (at start (link ?loc1 ?loc2))
                (at start (available)))
:effect (and       
            (at start (not (available)))
            (at start (not (at ?loc1)))
            (at end (at ?loc2))
           (at end (available))
        ))

(:durative-action Deliver_To_Customer
:parameters (?a - item ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (>= (stock ?a) 2 ) )
                (at start (available))
                (at start (at ?loc1) ) 
                (at end (>= (stock ?a) 0) ) )
:effect (and (at end (delivered ?a ?loc1))
                (at start (not (available)))
                (at start (decrease (stock ?a) 2 ) )
                (at end (available)))
)
)
