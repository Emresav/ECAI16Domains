(define (domain procurement_truck)
(:requirements :typing :durative-actions :fluents :duration-inequalities)

(:types    itemB itemD itemE itemA itemC - item
			location
)

    (:predicates (available)
                (finished)
				(can_produce_A ?loc1 - location)
				(can_produce_C ?loc1 - location)
				(can_supply ?loc1 - location)
				(delivered ?a - item ?loc1 - location)
				(at ?loc1 - location)
          )

      (:functions   (stock ?e - item)
            )

(:durative-action produce_A_1time
:parameters(?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
				(at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 2 ) )
                (at start (>= (stock ?c) 1 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 1))
                (at start (decrease (stock ?c) 1))
                (at start (decrease (stock ?b) 2))
                (at end (available))
)
)

(:durative-action produce_A_5time
:parameters(?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 10 ) )
                (at start (>= (stock ?c) 5 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 5))
                (at start (decrease (stock ?c) 5))
                (at start (decrease (stock ?b) 10))
                (at end (available))
)
)

(:durative-action produce_A_10time
:parameters(?a - itemA ?b - itemB ?c - itemC ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_A ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?b) 20 ) )
                (at start (>= (stock ?c) 10 ) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?c) 0) )
                (at end (>= (stock ?a) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?a) 10 ))
                (at start (decrease (stock ?c) 10 ))
                (at start (decrease (stock ?b) 20 ))
                (at end (available))
)
)

(:durative-action produce_C_1time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
				(at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 1) )
                (at start (>= (stock ?d) 3) )
                (at end (>= (stock ?d) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 1) )
                (at start (decrease (stock ?d) 3 ) )
                (at start (decrease (stock ?e) 1) )
                (at end (available))
)
)

(:durative-action produce_C_5time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 5) )
                (at start (>= (stock ?d) 15) )
                (at end (>= (stock ?d) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 5 ) )
                (at start (decrease (stock ?d) 15 ) )
                (at start (decrease (stock ?e) 5 ) )
                (at end (available))
)
)

(:durative-action produce_C_10time
:parameters(?c - itemC ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (available))
                (at start (can_produce_C ?loc1))
                (at start (at ?loc1) )
                (at start (>= (stock ?e) 10) )
                (at start (>= (stock ?d) 30) )
                (at end (>= (stock ?d) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?c) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?c) 10 ) )
                (at start (decrease (stock ?d) 30 ) )
                (at start (decrease (stock ?e) 10 ) )
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_1each
:parameters(?b - itemB ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
				(at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 1))
                (at start (increase (stock ?e) 1))
                (at start (increase (stock ?d) 1))
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_5each
:parameters(?b - itemB ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 5))
                (at start (increase (stock ?e) 5))
                (at start (increase (stock ?d) 5))
                (at end (available))
)
)

(:durative-action Supply_Raw_Material_10each
:parameters(?b - itemB ?d - itemD ?e - itemE ?loc1 - location)
:duration (= ?duration 1)
:condition (and 
                (at start (available))
                (at start (can_supply ?loc1) )
                (at start (at ?loc1) )
                (at end (>= (stock ?b) 0) ) 
                (at end (>= (stock ?e) 0) )
                (at end (>= (stock ?d) 0) )
            )
:effect (and    (at start (not (available)))
                (at start (increase (stock ?b) 10))
                (at start (increase (stock ?e) 10))
                (at start (increase (stock ?d) 10))
                (at end (available))
)
)

(:durative-action Go_to
:parameters (?loc1 ?loc2 - location)
:duration (= ?duration 5)
:condition (and (at start (at ?loc1) )
                (at start (available)))
:effect (and       
			(at start (not (available)))
			(at start (not (at ?loc1)))
            (at end (at ?loc2))
		   (at end (available))
        ))


(:durative-action Deliver_To_Customer
:parameters (?a - item ?loc1 - location)
:duration (= ?duration 1)
:condition (and (at start (>= (stock ?a) 3) )
                (at start (available))
                (at start (at ?loc1) ) 
                (at end (>= (stock ?a) 0) ) )
:effect (and (at end (delivered ?a ?loc1))
                (at start (not (available)))
                (at start (decrease (stock ?a) 3))
                (at end (available)))
)

)
